/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VRFv2Consumer, VRFv2ConsumerInterface } from "../VRFv2Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600280546001600160a01b0319908116736168499c0cffcacd319c818142124b7a15e857ab17909155600380549091167301be23585060835e02b77ef475b0cc51aa1e07091790557fd89b2bf150e3b9e13446986e571fb9cab24b13cea0a43ea20a6049a85cc807cc6004556005805466020003000186a06001600160501b031990911617905534801561009757600080fd5b5060405161054e38038061054e8339810160408190526100b69161011c565b6002546001600160a01b039081166080819052600080546001600160a01b03199081169092179055600354600180546008805490941633179093556001600160401b03909416600160a01b026001600160e01b031990921692169190911717905561014c565b60006020828403121561012e57600080fd5b81516001600160401b038116811461014557600080fd5b9392505050565b6080516103e261016c6000396000818160a6015260e801526103e26000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80626d6cae146100505780631fe543e31461006b578063beff730f14610080578063e0c8628914610093575b600080fd5b61005960075481565b60405190815260200160405180910390f35b61007e6100793660046102b0565b61009b565b005b61005961008e36600461037a565b610127565b61007e610148565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101195760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440160405180910390fd5b6101238282610222565b5050565b6006818154811061013757600080fd5b600091825260209091200154905081565b6008546001600160a01b0316331461015f57600080fd5b600054600480546001546005546040516305d3b1d360e41b815293840192909252600160a01b900467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190610393565b600755565b805161023590600690602084019061023a565b505050565b828054828255906000526020600020908101928215610275579160200282015b8281111561027557825182559160200191906001019061025a565b50610281929150610285565b5090565b5b808211156102815760008155600101610286565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156102c357600080fd5b8235915060208084013567ffffffffffffffff808211156102e357600080fd5b818601915086601f8301126102f757600080fd5b8135818111156103095761030961029a565b8060051b604051601f19603f8301168101818110858211171561032e5761032e61029a565b60405291825284820192508381018501918983111561034c57600080fd5b938501935b8285101561036a57843584529385019392850192610351565b8096505050505050509250929050565b60006020828403121561038c57600080fd5b5035919050565b6000602082840312156103a557600080fd5b505191905056fea26469706673582212208001a47c65e9d64f5e663cd3dad3a934a04c5d94fba0aeef785c14445f6463a864736f6c634300080c0033";

type VRFv2ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFv2ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFv2Consumer__factory extends ContractFactory {
  constructor(...args: VRFv2ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VRFv2Consumer";
  }

  deploy(
    _subscriptionId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VRFv2Consumer> {
    return super.deploy(
      _subscriptionId,
      overrides || {}
    ) as Promise<VRFv2Consumer>;
  }
  getDeployTransaction(
    _subscriptionId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_subscriptionId, overrides || {});
  }
  attach(address: string): VRFv2Consumer {
    return super.attach(address) as VRFv2Consumer;
  }
  connect(signer: Signer): VRFv2Consumer__factory {
    return super.connect(signer) as VRFv2Consumer__factory;
  }
  static readonly contractName: "VRFv2Consumer";
  public readonly contractName: "VRFv2Consumer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFv2ConsumerInterface {
    return new utils.Interface(_abi) as VRFv2ConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFv2Consumer {
    return new Contract(address, _abi, signerOrProvider) as VRFv2Consumer;
  }
}
