/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FutNFTTraining,
  FutNFTTrainingInterface,
} from "../FutNFTTraining";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "PlayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "preferredPosition",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "lastUpgrade",
            type: "uint32",
          },
          {
            internalType: "string[]",
            name: "suitablePositions",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct FutNFT.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPlayerExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedOnMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "preferredPosition",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "lastUpgrade",
            type: "uint32",
          },
          {
            internalType: "string[]",
            name: "suitablePositions",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct FutNFT.Player",
        name: "_player",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldown",
        type: "uint256",
      },
    ],
    name: "setCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
    ],
    name: "setMaxLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_playerId",
        type: "uint256",
      },
    ],
    name: "train",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405262069780600f5566038d7ea4c6800060105560646011553480156200002857600080fd5b506040805180820182526006815265119d5d13919560d21b6020808301918252835180850190945260048452631193919560e21b908401528151919291620000739160009162000102565b5080516200008990600190602084019062000102565b505050620000a6620000a0620000ac60201b60201c565b620000b0565b620001e5565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011090620001a8565b90600052602060002090601f0160209004810192826200013457600085556200017f565b82601f106200014f57805160ff19168380011785556200017f565b828001600101855582156200017f579182015b828111156200017f57825182559160200191906001019062000162565b506200018d92915062000191565b5090565b5b808211156200018d576000815560010162000192565b600181811c90821680620001bd57607f821691505b60208210811415620001df57634e487b7160e01b600052602260045260246000fd5b50919050565b61299a80620001f56000396000f3fe6080604052600436106101d85760003560e01c806369fe0e2d11610102578063a22cb46511610095578063ddca3f4311610064578063ddca3f4314610572578063e55ae4e814610588578063e985e9c5146105b5578063f2fde38b146105fe57600080fd5b8063a22cb465146104fc578063b88d4fde1461051c578063c87b56dd1461053c578063cc06c3591461055c57600080fd5b80638da5cb5b116100d15780638da5cb5b1461047957806393ba736e1461049757806395d89b41146104b757806396ffdb02146104cc57600080fd5b806369fe0e2d1461040e57806370a082311461042e578063715018a61461044e578063787a08a61461046357600080fd5b80632f745c591161017a5780634f6ccce7116101495780634f6ccce7146103765780634fc3f41a14610396578063580adaa3146103b65780636352211e146103ee57600080fd5b80632f745c5914610303578063344f1ba514610323578063368004ed1461034357806342842e0e1461035657600080fd5b8063095ea7b3116101b6578063095ea7b31461026c57806318160ddd1461028e57806319b90d27146102ad57806323b872dd146102e357600080fd5b806301ffc9a7146101dd57806306fdde0314610212578063081812fc14610234575b600080fd5b3480156101e957600080fd5b506101fd6101f83660046120e2565b61061e565b60405190151581526020015b60405180910390f35b34801561021e57600080fd5b5061022761062f565b6040516102099190612157565b34801561024057600080fd5b5061025461024f36600461216a565b6106c1565b6040516001600160a01b039091168152602001610209565b34801561027857600080fd5b5061028c61028736600461219f565b61075b565b005b34801561029a57600080fd5b506008545b604051908152602001610209565b3480156102b957600080fd5b506102546102c836600461216a565b600d602052600090815260409020546001600160a01b031681565b3480156102ef57600080fd5b5061028c6102fe3660046121c9565b610871565b34801561030f57600080fd5b5061029f61031e36600461219f565b6108a2565b34801561032f57600080fd5b5061028c61033e36600461216a565b610938565b61028c61035136600461216a565b610967565b34801561036257600080fd5b5061028c6103713660046121c9565b610bde565b34801561038257600080fd5b5061029f61039136600461216a565b610bf9565b3480156103a257600080fd5b5061028c6103b136600461216a565b610c8c565b3480156103c257600080fd5b506101fd6103d136600461216a565b6000908152600d60205260409020546001600160a01b0316151590565b3480156103fa57600080fd5b5061025461040936600461216a565b610cbb565b34801561041a57600080fd5b5061028c61042936600461216a565b610cc6565b34801561043a57600080fd5b5061029f610449366004612205565b610cf5565b34801561045a57600080fd5b5061028c610d7c565b34801561046f57600080fd5b5061029f600f5481565b34801561048557600080fd5b50600a546001600160a01b0316610254565b3480156104a357600080fd5b5061028c6104b23660046123cd565b610db2565b3480156104c357600080fd5b50610227610f7e565b3480156104d857600080fd5b506101fd6104e736600461216a565b600e6020526000908152604090205460ff1681565b34801561050857600080fd5b5061028c6105173660046124e4565b610f8d565b34801561052857600080fd5b5061028c610537366004612520565b610f9c565b34801561054857600080fd5b5061022761055736600461216a565b610fd4565b34801561056857600080fd5b5061029f60115481565b34801561057e57600080fd5b5061029f60105481565b34801561059457600080fd5b506105a86105a336600461216a565b6110bc565b60405161020991906125f1565b3480156105c157600080fd5b506101fd6105d03660046126b5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561060a57600080fd5b5061028c610619366004612205565b6113ff565b60006106298261149a565b92915050565b60606000805461063e906126e8565b80601f016020809104026020016040519081016040528092919081815260200182805461066a906126e8565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661073f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610766826114bf565b9050806001600160a01b0316836001600160a01b031614156107d45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610736565b336001600160a01b03821614806107f057506107f081336105d0565b6108625760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610736565b61086c8383611536565b505050565b61087b33826115a4565b6108975760405162461bcd60e51b815260040161073690612723565b61086c83838361169b565b60006108ad83610cf5565b821061090f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610736565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146109625760405162461bcd60e51b815260040161073690612774565b601155565b600f546000828152600c6020526040902060030154829190429061099890839062010000900463ffffffff166127bf565b11156109e65760405162461bcd60e51b815260206004820152601c60248201527f436f6f6c646f776e20706572696f64206973206e6f74206f76657221000000006044820152606401610736565b6011546000848152600c60205260409020600301548490610100900460ff168211610a535760405162461bcd60e51b815260206004820152601d60248201527f506c61796572206861732072656163686564206d6178206c6576656c210000006044820152606401610736565b6000858152600d602052604090205485906001600160a01b0316610ab15760405162461bcd60e51b8152602060048201526015602482015274141b185e595c88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606401610736565b610aba81610cbb565b6001600160a01b0316336001600160a01b031614610b0b5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420746865206f776e65722160901b6044820152606401610736565b601054341015610b5d5760405162461bcd60e51b815260206004820152601960248201527f526571756972656420666565206973206e6f742073656e7421000000000000006044820152606401610736565b6000868152600c602052604090206003018054610100900460ff16906001610b84836127d7565b91906101000a81548160ff021916908360ff160217905550507f6a1b6f91db361bdf7356d3942ed64f2ee2fea430979dbba7ea23f44e8b21100786604051610bce91815260200190565b60405180910390a1505050505050565b61086c83838360405180602001604052806000815250610f9c565b6000610c0460085490565b8210610c675760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610736565b60088281548110610c7a57610c7a6127f7565b90600052602060002001549050919050565b600a546001600160a01b03163314610cb65760405162461bcd60e51b815260040161073690612774565b600f55565b6000610629826114bf565b600a546001600160a01b03163314610cf05760405162461bcd60e51b815260040161073690612774565b601055565b60006001600160a01b038216610d605760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610736565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610da65760405162461bcd60e51b815260040161073690612774565b610db06000611842565b565b600a546001600160a01b03163314610ddc5760405162461bcd60e51b815260040161073690612774565b6040808201516000908152600d60205220546001600160a01b031615610e355760405162461bcd60e51b815260206004820152600e60248201526d506c61796572204578697374732160901b6044820152606401610736565b6040808201516000908152600c6020908152919020825180518493610e5e928492910190611f83565b506020828101518051610e779260018501920190611f83565b50604082015160028201556060820151600382018054608085015160a086015163ffffffff16620100000265ffffffff00001960ff9283166101000261ffff199094169290951691909117919091179290921691909117905560c08201518051610eeb916004840191602090910190612007565b5060e08201518051610f07916005840191602090910190611f83565b505050604080820180516000908152600d6020529190912080546001600160a01b031916339081179091559051610f3e9190611894565b7f5af403e238a3f8f7d43c05ff2fac53c833e031e8fb8ec011b3c8e073d870ad7b8160400151604051610f7391815260200190565b60405180910390a150565b60606001805461063e906126e8565b610f983383836119e2565b5050565b610fa633836115a4565b610fc25760405162461bcd60e51b815260040161073690612723565b610fce84848484611ab1565b50505050565b6000818152600260205260409020546060906001600160a01b03166110535760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610736565b600061106a60408051602081019091526000815290565b9050600081511161108a57604051806020016040528060008152506110b5565b8061109484611ae4565b6040516020016110a592919061280d565b6040516020818303038152906040525b9392505050565b611110604051806101000160405280606081526020016060815260200160008152602001600060ff168152602001600060ff168152602001600063ffffffff16815260200160608152602001606081525090565b6000828152600c60205260409081902081516101008101909252805482908290611139906126e8565b80601f0160208091040260200160405190810160405280929190818152602001828054611165906126e8565b80156111b25780601f10611187576101008083540402835291602001916111b2565b820191906000526020600020905b81548152906001019060200180831161119557829003601f168201915b505050505081526020016001820180546111cb906126e8565b80601f01602080910402602001604051908101604052809291908181526020018280546111f7906126e8565b80156112445780601f1061121957610100808354040283529160200191611244565b820191906000526020600020905b81548152906001019060200180831161122757829003601f168201915b50505091835250506002820154602080830191909152600383015460ff808216604080860191909152610100830490911660608501526201000090910463ffffffff16608084015260048401805482518185028101850190935280835260a090940193919290919060009084015b8282101561135e5783829060005260206000200180546112d1906126e8565b80601f01602080910402602001604051908101604052809291908181526020018280546112fd906126e8565b801561134a5780601f1061131f5761010080835404028352916020019161134a565b820191906000526020600020905b81548152906001019060200180831161132d57829003601f168201915b5050505050815260200190600101906112b2565b505050508152602001600582018054611376906126e8565b80601f01602080910402602001604051908101604052809291908181526020018280546113a2906126e8565b80156113ef5780601f106113c4576101008083540402835291602001916113ef565b820191906000526020600020905b8154815290600101906020018083116113d257829003601f168201915b5050505050815250509050919050565b600a546001600160a01b031633146114295760405162461bcd60e51b815260040161073690612774565b6001600160a01b03811661148e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610736565b61149781611842565b50565b60006001600160e01b0319821663780e9d6360e01b1480610629575061062982611be2565b6000818152600260205260408120546001600160a01b0316806106295760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610736565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061156b826114bf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661161d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610736565b6000611628836114bf565b9050806001600160a01b0316846001600160a01b031614806116635750836001600160a01b0316611658846106c1565b6001600160a01b0316145b8061169357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166116ae826114bf565b6001600160a01b0316146117125760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610736565b6001600160a01b0382166117745760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610736565b61177f838383611c32565b61178a600082611536565b6001600160a01b03831660009081526003602052604081208054600192906117b390849061283c565b90915550506001600160a01b03821660009081526003602052604081208054600192906117e19084906127bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166118ea5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610736565b6000818152600260205260409020546001600160a01b03161561194f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610736565b61195b60008383611c32565b6001600160a01b03821660009081526003602052604081208054600192906119849084906127bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415611a445760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610736565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611abc84848461169b565b611ac884848484611c3d565b610fce5760405162461bcd60e51b815260040161073690612853565b606081611b085750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611b325780611b1c816128a5565b9150611b2b9050600a836128d6565b9150611b0c565b60008167ffffffffffffffff811115611b4d57611b4d612220565b6040519080825280601f01601f191660200182016040528015611b77576020820181803683370190505b5090505b841561169357611b8c60018361283c565b9150611b99600a866128ea565b611ba49060306127bf565b60f81b818381518110611bb957611bb96127f7565b60200101906001600160f81b031916908160001a905350611bdb600a866128d6565b9450611b7b565b60006001600160e01b031982166380ac58cd60e01b1480611c1357506001600160e01b03198216635b5e139f60e01b145b8061062957506301ffc9a760e01b6001600160e01b0319831614610629565b61086c838383611d3b565b60006001600160a01b0384163b15611d3057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c819033908990889088906004016128fe565b6020604051808303816000875af1925050508015611cbc575060408051601f3d908101601f19168201909252611cb991810190612931565b60015b611d16573d808015611cea576040519150601f19603f3d011682016040523d82523d6000602084013e611cef565b606091505b508051611d0e5760405162461bcd60e51b815260040161073690612853565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611693565b506001949350505050565b6001600160a01b038316611d9657611d9181600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611db9565b816001600160a01b0316836001600160a01b031614611db957611db98382611df3565b6001600160a01b038216611dd05761086c81611e90565b826001600160a01b0316826001600160a01b03161461086c5761086c8282611f3f565b60006001611e0084610cf5565b611e0a919061283c565b600083815260076020526040902054909150808214611e5d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611ea29060019061283c565b60008381526009602052604081205460088054939450909284908110611eca57611eca6127f7565b906000526020600020015490508060088381548110611eeb57611eeb6127f7565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f2357611f2361294e565b6001900381819060005260206000200160009055905550505050565b6000611f4a83610cf5565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611f8f906126e8565b90600052602060002090601f016020900481019282611fb15760008555611ff7565b82601f10611fca57805160ff1916838001178555611ff7565b82800160010185558215611ff7579182015b82811115611ff7578251825591602001919060010190611fdc565b50612003929150612060565b5090565b828054828255906000526020600020908101928215612054579160200282015b828111156120545782518051612044918491602090910190611f83565b5091602001919060010190612027565b50612003929150612075565b5b808211156120035760008155600101612061565b808211156120035760006120898282612092565b50600101612075565b50805461209e906126e8565b6000825580601f106120ae575050565b601f0160209004906000526020600020908101906114979190612060565b6001600160e01b03198116811461149757600080fd5b6000602082840312156120f457600080fd5b81356110b5816120cc565b60005b8381101561211a578181015183820152602001612102565b83811115610fce5750506000910152565b600081518084526121438160208601602086016120ff565b601f01601f19169290920160200192915050565b6020815260006110b5602083018461212b565b60006020828403121561217c57600080fd5b5035919050565b80356001600160a01b038116811461219a57600080fd5b919050565b600080604083850312156121b257600080fd5b6121bb83612183565b946020939093013593505050565b6000806000606084860312156121de57600080fd5b6121e784612183565b92506121f560208501612183565b9150604084013590509250925092565b60006020828403121561221757600080fd5b6110b582612183565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561225a5761225a612220565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561228957612289612220565b604052919050565b600067ffffffffffffffff8311156122ab576122ab612220565b6122be601f8401601f1916602001612260565b90508281528383830111156122d257600080fd5b828260208301376000602084830101529392505050565b600082601f8301126122fa57600080fd5b6110b583833560208501612291565b803560ff8116811461219a57600080fd5b803563ffffffff8116811461219a57600080fd5b600082601f83011261233f57600080fd5b8135602067ffffffffffffffff8083111561235c5761235c612220565b8260051b61236b838201612260565b938452858101830193838101908886111561238557600080fd5b84880192505b858310156123c1578235848111156123a35760008081fd5b6123b18a87838c01016122e9565b835250918401919084019061238b565b98975050505050505050565b6000602082840312156123df57600080fd5b813567ffffffffffffffff808211156123f757600080fd5b90830190610100828603121561240c57600080fd5b612414612236565b82358281111561242357600080fd5b61242f878286016122e9565b82525060208301358281111561244457600080fd5b612450878286016122e9565b6020830152506040830135604082015261246c60608401612309565b606082015261247d60808401612309565b608082015261248e60a0840161231a565b60a082015260c0830135828111156124a557600080fd5b6124b18782860161232e565b60c08301525060e0830135828111156124c957600080fd5b6124d5878286016122e9565b60e08301525095945050505050565b600080604083850312156124f757600080fd5b61250083612183565b91506020830135801515811461251557600080fd5b809150509250929050565b6000806000806080858703121561253657600080fd5b61253f85612183565b935061254d60208601612183565b925060408501359150606085013567ffffffffffffffff81111561257057600080fd5b8501601f8101871361258157600080fd5b61259087823560208401612291565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b858110156125e45782840389526125d284835161212b565b988501989350908401906001016125ba565b5091979650505050505050565b602081526000825161010080602085015261261061012085018361212b565b91506020850151601f198086850301604087015261262e848361212b565b93506040870151606087015260608701519150612650608087018360ff169052565b608087015160ff811660a0880152915060a087015163ffffffff811660c0880152915060c08701519150808685030160e087015261268e848361259c565b935060e08701519150808685030183870152506126ab838261212b565b9695505050505050565b600080604083850312156126c857600080fd5b6126d183612183565b91506126df60208401612183565b90509250929050565b600181811c908216806126fc57607f821691505b6020821081141561271d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156127d2576127d26127a9565b500190565b600060ff821660ff8114156127ee576127ee6127a9565b60010192915050565b634e487b7160e01b600052603260045260246000fd5b6000835161281f8184602088016120ff565b8351908301906128338183602088016120ff565b01949350505050565b60008282101561284e5761284e6127a9565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156128b9576128b96127a9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826128e5576128e56128c0565b500490565b6000826128f9576128f96128c0565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906126ab9083018461212b565b60006020828403121561294357600080fd5b81516110b5816120cc565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202df980fb0a4fa658029e848ab905821acd3d4c9cd169df141c3f73835cd7f98a64736f6c634300080c0033";

type FutNFTTrainingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FutNFTTrainingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FutNFTTraining__factory extends ContractFactory {
  constructor(...args: FutNFTTrainingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FutNFTTraining";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FutNFTTraining> {
    return super.deploy(overrides || {}) as Promise<FutNFTTraining>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FutNFTTraining {
    return super.attach(address) as FutNFTTraining;
  }
  connect(signer: Signer): FutNFTTraining__factory {
    return super.connect(signer) as FutNFTTraining__factory;
  }
  static readonly contractName: "FutNFTTraining";
  public readonly contractName: "FutNFTTraining";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FutNFTTrainingInterface {
    return new utils.Interface(_abi) as FutNFTTrainingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FutNFTTraining {
    return new Contract(address, _abi, signerOrProvider) as FutNFTTraining;
  }
}
