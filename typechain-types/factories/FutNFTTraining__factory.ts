/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FutNFTTraining,
  FutNFTTrainingInterface,
} from "../FutNFTTraining";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "playerId",
        type: "uint256",
      },
    ],
    name: "PlayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListedPlayers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "preferredPosition",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "lastUpgrade",
            type: "uint64",
          },
          {
            internalType: "string[]",
            name: "suitablePositions",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct FutNFT.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPlayerExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getPlayersByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "preferredPosition",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "level",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "lastUpgrade",
            type: "uint64",
          },
          {
            internalType: "string[]",
            name: "suitablePositions",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct FutNFT.Player",
        name: "_player",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldown",
        type: "uint256",
      },
    ],
    name: "setCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
    ],
    name: "setMaxLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_playerId",
        type: "uint256",
      },
    ],
    name: "train",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261a8c060115566038d7ea4c6800060125560646013553480156200002757600080fd5b506040805180820182526006815265119d5d13919560d21b6020808301918252835180850190945260048452631193919560e21b908401528151919291620000729160009162000101565b5080516200008890600190602084019062000101565b505050620000a56200009f620000ab60201b60201c565b620000af565b620001e4565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010f90620001a7565b90600052602060002090601f0160209004810192826200013357600085556200017e565b82601f106200014e57805160ff19168380011785556200017e565b828001600101855582156200017e579182015b828111156200017e57825182559160200191906001019062000161565b506200018c92915062000190565b5090565b5b808211156200018c576000815560010162000191565b600181811c90821680620001bc57607f821691505b60208210811415620001de57634e487b7160e01b600052602260045260246000fd5b50919050565b612b9a80620001f46000396000f3fe6080604052600436106101ee5760003560e01c806369fe0e2d1161010d578063b88d4fde116100a0578063e55ae4e81161006f578063e55ae4e814610590578063e985e9c5146105bd578063eef2fc1f14610606578063f2eeb53614610626578063f2fde38b1461064657600080fd5b8063b88d4fde14610524578063c87b56dd14610544578063cc06c35914610564578063ddca3f431461057a57600080fd5b80638da5cb5b116100dc5780638da5cb5b146104b1578063923e5c6a146104cf57806395d89b41146104ef578063a22cb4651461050457600080fd5b806369fe0e2d1461044657806370a0823114610466578063715018a614610486578063787a08a61461049b57600080fd5b80632f745c59116101855780634f6ccce7116101545780634f6ccce7146103ae5780634fc3f41a146103ce578063580adaa3146103ee5780636352211e1461042657600080fd5b80632f745c591461033b578063344f1ba51461035b578063368004ed1461037b57806342842e0e1461038e57600080fd5b8063095ea7b3116101c1578063095ea7b3146102a457806318160ddd146102c657806319b90d27146102e557806323b872dd1461031b57600080fd5b806301ffc9a7146101f357806305901e891461022857806306fdde031461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e36600461229e565b610666565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5061023d610677565b60405161021f91906122bb565b34801561025657600080fd5b5061025f6106cf565b60405161021f9190612357565b34801561027857600080fd5b5061028c61028736600461236a565b610758565b6040516001600160a01b03909116815260200161021f565b3480156102b057600080fd5b506102c46102bf36600461239f565b6107f2565b005b3480156102d257600080fd5b506008545b60405190815260200161021f565b3480156102f157600080fd5b5061028c61030036600461236a565b600d602052600090815260409020546001600160a01b031681565b34801561032757600080fd5b506102c46103363660046123c9565b610908565b34801561034757600080fd5b506102d761035636600461239f565b610939565b34801561036757600080fd5b506102c461037636600461236a565b6109cf565b6102c461038936600461236a565b6109fe565b34801561039a57600080fd5b506102c46103a93660046123c9565b610c78565b3480156103ba57600080fd5b506102d76103c936600461236a565b610c93565b3480156103da57600080fd5b506102c46103e936600461236a565b610d26565b3480156103fa57600080fd5b5061021361040936600461236a565b6000908152600d60205260409020546001600160a01b0316151590565b34801561043257600080fd5b5061028c61044136600461236a565b610d55565b34801561045257600080fd5b506102c461046136600461236a565b610d60565b34801561047257600080fd5b506102d7610481366004612405565b610d8f565b34801561049257600080fd5b506102c4610e16565b3480156104a757600080fd5b506102d760115481565b3480156104bd57600080fd5b50600a546001600160a01b031661028c565b3480156104db57600080fd5b506102d76104ea36600461236a565b610e4c565b3480156104fb57600080fd5b5061025f610e6d565b34801561051057600080fd5b506102c461051f366004612420565b610e7c565b34801561053057600080fd5b506102c461053f366004612522565b610e8b565b34801561055057600080fd5b5061025f61055f36600461236a565b610ec3565b34801561057057600080fd5b506102d760135481565b34801561058657600080fd5b506102d760125481565b34801561059c57600080fd5b506105b06105ab36600461236a565b610fab565b60405161021f91906125f2565b3480156105c957600080fd5b506102136105d83660046126b9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561061257600080fd5b5061023d610621366004612405565b6112f4565b34801561063257600080fd5b506102c46106413660046127d2565b6113b5565b34801561065257600080fd5b506102c4610661366004612405565b6115bc565b600061067182611657565b92915050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156106c557602002820191906000526020600020905b8154815260200190600101908083116106b1575b5050505050905090565b6060600080546106de906128e8565b80601f016020809104026020016040519081016040528092919081815260200182805461070a906128e8565b80156106c55780601f1061072c576101008083540402835291602001916106c5565b820191906000526020600020905b81548152906001019060200180831161073a57509395945050505050565b6000818152600260205260408120546001600160a01b03166107d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107fd8261167c565b9050806001600160a01b0316836001600160a01b0316141561086b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107cd565b336001600160a01b0382161480610887575061088781336105d8565b6108f95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107cd565b61090383836116f3565b505050565b6109123382611761565b61092e5760405162461bcd60e51b81526004016107cd90612923565b610903838383611858565b600061094483610d8f565b82106109a65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016107cd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146109f95760405162461bcd60e51b81526004016107cd90612974565b601355565b6011546000828152600c60205260409020600301548291904290610a329083906201000090046001600160401b03166129bf565b1115610a805760405162461bcd60e51b815260206004820152601c60248201527f436f6f6c646f776e20706572696f64206973206e6f74206f766572210000000060448201526064016107cd565b6013546000848152600c60205260409020600301548490610100900460ff168211610aed5760405162461bcd60e51b815260206004820152601d60248201527f506c61796572206861732072656163686564206d6178206c6576656c2100000060448201526064016107cd565b6000858152600d602052604090205485906001600160a01b0316610b4b5760405162461bcd60e51b8152602060048201526015602482015274141b185e595c88191bd95cc81b9bdd08195e1a5cdd605a1b60448201526064016107cd565b610b5481610d55565b6001600160a01b0316336001600160a01b031614610ba55760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420746865206f776e65722160901b60448201526064016107cd565b601254341015610bf75760405162461bcd60e51b815260206004820152601960248201527f526571756972656420666565206973206e6f742073656e74210000000000000060448201526064016107cd565b6000868152600c602052604090206003018054610100900460ff16906001610c1e836129d7565b91906101000a81548160ff021916908360ff160217905550507f6a1b6f91db361bdf7356d3942ed64f2ee2fea430979dbba7ea23f44e8b21100786604051610c6891815260200190565b60405180910390a1505050505050565b61090383838360405180602001604052806000815250610e8b565b6000610c9e60085490565b8210610d015760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016107cd565b60088281548110610d1457610d146129f7565b90600052602060002001549050919050565b600a546001600160a01b03163314610d505760405162461bcd60e51b81526004016107cd90612974565b601155565b60006106718261167c565b600a546001600160a01b03163314610d8a5760405162461bcd60e51b81526004016107cd90612974565b601255565b60006001600160a01b038216610dfa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107cd565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610e405760405162461bcd60e51b81526004016107cd90612974565b610e4a60006119ff565b565b600f8181548110610e5c57600080fd5b600091825260209091200154905081565b6060600180546106de906128e8565b610e87338383611a51565b5050565b610e953383611761565b610eb15760405162461bcd60e51b81526004016107cd90612923565b610ebd84848484611b20565b50505050565b6000818152600260205260409020546060906001600160a01b0316610f425760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107cd565b6000610f5960408051602081019091526000815290565b90506000815111610f795760405180602001604052806000815250610fa4565b80610f8384611b53565b604051602001610f94929190612a0d565b6040516020818303038152906040525b9392505050565b611002604051806101000160405280606081526020016060815260200160008152602001600060ff168152602001600060ff16815260200160006001600160401b0316815260200160608152602001606081525090565b6000828152600c6020526040908190208151610100810190925280548290829061102b906128e8565b80601f0160208091040260200160405190810160405280929190818152602001828054611057906128e8565b80156110a45780601f10611079576101008083540402835291602001916110a4565b820191906000526020600020905b81548152906001019060200180831161108757829003601f168201915b505050505081526020016001820180546110bd906128e8565b80601f01602080910402602001604051908101604052809291908181526020018280546110e9906128e8565b80156111365780601f1061110b57610100808354040283529160200191611136565b820191906000526020600020905b81548152906001019060200180831161111957829003601f168201915b50505091835250506002820154602080830191909152600383015460ff80821660408086019190915261010083049091166060850152620100009091046001600160401b0316608084015260048401805482518185028101850190935280835260a090940193919290919060009084015b828210156112535783829060005260206000200180546111c6906128e8565b80601f01602080910402602001604051908101604052809291908181526020018280546111f2906128e8565b801561123f5780601f106112145761010080835404028352916020019161123f565b820191906000526020600020905b81548152906001019060200180831161122257829003601f168201915b5050505050815260200190600101906111a7565b50505050815260200160058201805461126b906128e8565b80601f0160208091040260200160405190810160405280929190818152602001828054611297906128e8565b80156112e45780601f106112b9576101008083540402835291602001916112e4565b820191906000526020600020905b8154815290600101906020018083116112c757829003601f168201915b5050505050815250509050919050565b6060806000805b6010548110156113ac57846001600160a01b0316600d600060108481548110611326576113266129f7565b600091825260208083209091015483528201929092526040019020546001600160a01b0316141561139a5760108181548110611364576113646129f7565b9060005260206000200154838381518110611381576113816129f7565b60209081029190910101528161139681612a3c565b9250505b806113a481612a3c565b9150506112fb565b50909392505050565b600a546001600160a01b031633146113df5760405162461bcd60e51b81526004016107cd90612974565b6040808201516000908152600d60205220546001600160a01b0316156114385760405162461bcd60e51b815260206004820152600e60248201526d506c61796572204578697374732160901b60448201526064016107cd565b6040808201516000908152600c602090815291902082518051849361146192849291019061213f565b50602082810151805161147a926001850192019061213f565b50604082015160028201556060820151600382018054608085015160a08601516001600160401b0316620100000269ffffffffffffffff00001960ff9283166101000261ffff199094169290951691909117919091179290921691909117905560c082015180516114f59160048401916020909101906121c3565b5060e0820151805161151191600584019160209091019061213f565b505050604080820180516010805460018101825560009182527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672019190915581518152600d6020529190912080546001600160a01b03191633908117909155905161157c9190611c50565b7f5af403e238a3f8f7d43c05ff2fac53c833e031e8fb8ec011b3c8e073d870ad7b81604001516040516115b191815260200190565b60405180910390a150565b600a546001600160a01b031633146115e65760405162461bcd60e51b81526004016107cd90612974565b6001600160a01b03811661164b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107cd565b611654816119ff565b50565b60006001600160e01b0319821663780e9d6360e01b1480610671575061067182611d9e565b6000818152600260205260408120546001600160a01b0316806106715760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107cd565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906117288261167c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166117da5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107cd565b60006117e58361167c565b9050806001600160a01b0316846001600160a01b031614806118205750836001600160a01b031661181584610758565b6001600160a01b0316145b8061185057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661186b8261167c565b6001600160a01b0316146118cf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107cd565b6001600160a01b0382166119315760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107cd565b61193c838383611dee565b6119476000826116f3565b6001600160a01b0383166000908152600360205260408120805460019290611970908490612a57565b90915550506001600160a01b038216600090815260036020526040812080546001929061199e9084906129bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611ab35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107cd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611b2b848484611858565b611b3784848484611df9565b610ebd5760405162461bcd60e51b81526004016107cd90612a6e565b606081611b775750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ba15780611b8b81612a3c565b9150611b9a9050600a83612ad6565b9150611b7b565b6000816001600160401b03811115611bbb57611bbb61245c565b6040519080825280601f01601f191660200182016040528015611be5576020820181803683370190505b5090505b841561185057611bfa600183612a57565b9150611c07600a86612aea565b611c129060306129bf565b60f81b818381518110611c2757611c276129f7565b60200101906001600160f81b031916908160001a905350611c49600a86612ad6565b9450611be9565b6001600160a01b038216611ca65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107cd565b6000818152600260205260409020546001600160a01b031615611d0b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107cd565b611d1760008383611dee565b6001600160a01b0382166000908152600360205260408120805460019290611d409084906129bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b031982166380ac58cd60e01b1480611dcf57506001600160e01b03198216635b5e139f60e01b145b8061067157506301ffc9a760e01b6001600160e01b0319831614610671565b610903838383611ef7565b60006001600160a01b0384163b15611eec57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e3d903390899088908890600401612afe565b6020604051808303816000875af1925050508015611e78575060408051601f3d908101601f19168201909252611e7591810190612b31565b60015b611ed2573d808015611ea6576040519150601f19603f3d011682016040523d82523d6000602084013e611eab565b606091505b508051611eca5760405162461bcd60e51b81526004016107cd90612a6e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611850565b506001949350505050565b6001600160a01b038316611f5257611f4d81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f75565b816001600160a01b0316836001600160a01b031614611f7557611f758382611faf565b6001600160a01b038216611f8c576109038161204c565b826001600160a01b0316826001600160a01b0316146109035761090382826120fb565b60006001611fbc84610d8f565b611fc69190612a57565b600083815260076020526040902054909150808214612019576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061205e90600190612a57565b60008381526009602052604081205460088054939450909284908110612086576120866129f7565b9060005260206000200154905080600883815481106120a7576120a76129f7565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806120df576120df612b4e565b6001900381819060005260206000200160009055905550505050565b600061210683610d8f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461214b906128e8565b90600052602060002090601f01602090048101928261216d57600085556121b3565b82601f1061218657805160ff19168380011785556121b3565b828001600101855582156121b3579182015b828111156121b3578251825591602001919060010190612198565b506121bf92915061221c565b5090565b828054828255906000526020600020908101928215612210579160200282015b82811115612210578251805161220091849160209091019061213f565b50916020019190600101906121e3565b506121bf929150612231565b5b808211156121bf576000815560010161221d565b808211156121bf576000612245828261224e565b50600101612231565b50805461225a906128e8565b6000825580601f1061226a575050565b601f016020900490600052602060002090810190611654919061221c565b6001600160e01b03198116811461165457600080fd5b6000602082840312156122b057600080fd5b8135610fa481612288565b6020808252825182820181905260009190848201906040850190845b818110156122f3578351835292840192918401916001016122d7565b50909695505050505050565b60005b8381101561231a578181015183820152602001612302565b83811115610ebd5750506000910152565b600081518084526123438160208601602086016122ff565b601f01601f19169290920160200192915050565b602081526000610fa4602083018461232b565b60006020828403121561237c57600080fd5b5035919050565b80356001600160a01b038116811461239a57600080fd5b919050565b600080604083850312156123b257600080fd5b6123bb83612383565b946020939093013593505050565b6000806000606084860312156123de57600080fd5b6123e784612383565b92506123f560208501612383565b9150604084013590509250925092565b60006020828403121561241757600080fd5b610fa482612383565b6000806040838503121561243357600080fd5b61243c83612383565b91506020830135801515811461245157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156124955761249561245c565b60405290565b604051601f8201601f191681016001600160401b03811182821017156124c3576124c361245c565b604052919050565b60006001600160401b038311156124e4576124e461245c565b6124f7601f8401601f191660200161249b565b905082815283838301111561250b57600080fd5b828260208301376000602084830101529392505050565b6000806000806080858703121561253857600080fd5b61254185612383565b935061254f60208601612383565b92506040850135915060608501356001600160401b0381111561257157600080fd5b8501601f8101871361258257600080fd5b612591878235602084016124cb565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b858110156125e55782840389526125d384835161232b565b988501989350908401906001016125bb565b5091979650505050505050565b602081526000825161010080602085015261261161012085018361232b565b91506020850151601f198086850301604087015261262f848361232b565b93506040870151606087015260608701519150612651608087018360ff169052565b608087015160ff811660a0880152915060a08701516001600160401b03811660c0880152915060c08701519150808685030160e0870152612692848361259d565b935060e08701519150808685030183870152506126af838261232b565b9695505050505050565b600080604083850312156126cc57600080fd5b6126d583612383565b91506126e360208401612383565b90509250929050565b600082601f8301126126fd57600080fd5b610fa4838335602085016124cb565b803560ff8116811461239a57600080fd5b80356001600160401b038116811461239a57600080fd5b600082601f83011261274557600080fd5b813560206001600160401b03808311156127615761276161245c565b8260051b61277083820161249b565b938452858101830193838101908886111561278a57600080fd5b84880192505b858310156127c6578235848111156127a85760008081fd5b6127b68a87838c01016126ec565b8352509184019190840190612790565b98975050505050505050565b6000602082840312156127e457600080fd5b81356001600160401b03808211156127fb57600080fd5b90830190610100828603121561281057600080fd5b612818612472565b82358281111561282757600080fd5b612833878286016126ec565b82525060208301358281111561284857600080fd5b612854878286016126ec565b602083015250604083013560408201526128706060840161270c565b60608201526128816080840161270c565b608082015261289260a0840161271d565b60a082015260c0830135828111156128a957600080fd5b6128b587828601612734565b60c08301525060e0830135828111156128cd57600080fd5b6128d9878286016126ec565b60e08301525095945050505050565b600181811c908216806128fc57607f821691505b6020821081141561291d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156129d2576129d26129a9565b500190565b600060ff821660ff8114156129ee576129ee6129a9565b60010192915050565b634e487b7160e01b600052603260045260246000fd5b60008351612a1f8184602088016122ff565b835190830190612a338183602088016122ff565b01949350505050565b6000600019821415612a5057612a506129a9565b5060010190565b600082821015612a6957612a696129a9565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082612ae557612ae5612ac0565b500490565b600082612af957612af9612ac0565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906126af9083018461232b565b600060208284031215612b4357600080fd5b8151610fa481612288565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b0ceba00c01360497d69ec8c560bddee93a4f718480024e38c05b7beea67f22c64736f6c634300080c0033";

type FutNFTTrainingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FutNFTTrainingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FutNFTTraining__factory extends ContractFactory {
  constructor(...args: FutNFTTrainingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FutNFTTraining";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FutNFTTraining> {
    return super.deploy(overrides || {}) as Promise<FutNFTTraining>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FutNFTTraining {
    return super.attach(address) as FutNFTTraining;
  }
  connect(signer: Signer): FutNFTTraining__factory {
    return super.connect(signer) as FutNFTTraining__factory;
  }
  static readonly contractName: "FutNFTTraining";
  public readonly contractName: "FutNFTTraining";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FutNFTTrainingInterface {
    return new utils.Interface(_abi) as FutNFTTrainingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FutNFTTraining {
    return new Contract(address, _abi, signerOrProvider) as FutNFTTraining;
  }
}
